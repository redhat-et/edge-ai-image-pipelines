name: Run Jumpstarter Workflow
on:
  workflow_call:
    inputs:
      image-url:
        type: string
        required: true
      jumpstarter-selector:
        type: string
        required: true
      workflow-cmd:
        type: string
        required: true
jobs:
  test-tegra-base-image:
    runs-on: ubuntu-24.04-arm
    container:
      image: docker.io/fedora:42
      options: --privileged --device /dev/nvme0n1
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - name: Install podman
        run: dnf -y install podman zstd jq
      - name: Free up disk space
        run: |
          dnf install xfsprogs -y
          mkfs.xfs /dev/nvme0n1
          mkdir -p              /var/lib/containers
          mount    /dev/nvme0n1 /var/lib/containers
      - name: Workaround open podman-login action issue
        env:
          auth: "{ \"auths\": {} }"
        run: |
          mkdir -p $HOME/.docker
          echo $auth > $HOME/.docker/config.json
      - name: Log in to the Container registry
        uses: redhat-actions/podman-login@v1
        with:
          registry: quay.io
          username: ${{ secrets.DEST_REGISTRY_USER }}
          password: ${{ secrets.DEST_REGISTRY_PASSWORD }}
          auth_file_path: /run/containers/0/auth.json
      - name: Prepare Bootc Image
        run: |
          uv venv
          uv pip install --extra-index-url https://pkg.jumpstarter.dev/main/simple jumpstarter-all

          mkdir -p ~/.config/jumpstarter/clients
          cat <<EOF > ~/.config/jumpstarter/clients/default.yaml
          ${{ secrets.JUMPSTARTER_CLIENT_CONFIG }}
          EOF
          uv run jmp config client use default
      - name: Acquire lease
        run: |
          LEASE=$(uv run jmp create lease --selector ${{ inputs.jumpstarter-selector }} --duration 01:00:00 --output name)
          while true; do
            EXPORTER=$(uv run jmp get leases -o json | jq ".leases[] | select(.name==\"$LEASE\") | .exporter")
            if [[ -n "$EXPORTER" ]]; then
              break
            fi
            sleep 5
          done
          echo "LEASE=$LEASE" >> "$GITHUB_ENV"
      - name: Flash bootc image
        # users have the option to not provide an image, in which case we just run the workflow-cmd
        # I can imagine this may lead to a confusing UX
        if: ${{ inputs.image-url != '' }}
        run: |
          podman artifact pull    ${{ inputs.image-url }}
          podman artifact extract ${{ inputs.image-url }} image.raw.xz
          uv run jmp shell --lease $LEASE -- j storage dut
          uv run jmp shell --lease $LEASE -- j storage flash image.raw.xz --compression=xz
      - name: Test RHEL bootc image
        run: |
          uv run jmp shell --lease $LEASE -- ${{ inputs.workflow-cmd }}
      - name: Release lease
        if: always()
        run: |
          uv run jmp delete leases $LEASE
