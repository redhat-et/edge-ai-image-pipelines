# Reference: https://github.com/redhat-cop/redhat-image-mode-actions
name: Build RHEL bootc image
on:
  workflow_call:
    inputs:
      containerfile:
        type: string
        required: true
      dest-image:
        type: string
        required: true
      build-args:
        type: string
        required: false
      tag-list:
        type: string
        required: true
      runs-on:
        type: string
        default: ubuntu-24.04-arm
    outputs:
      dest-reference:
        value: ${{ jobs.rhel-bootc-image-build.outputs.dest-reference }}

jobs:
  rhel-bootc-image-build:
    name: Build RHEL bootc image
    runs-on: ${{ inputs.runs-on }}
    outputs:
      dest-reference: "${{ steps.push-to-ghcr.outputs.registry-path }}@${{ steps.push-to-ghcr.outputs.digest }}"
    env:
      # Disable Subscription Manager container passthrough
      SMDEV_CONTAINER_OFF: 1

      # Registry hosts
      SOURCE_REGISTRY_HOST: registry.redhat.io
      DEST_REGISTRY_HOST: quay.io

      # Destination image namespace and name (eg: myrepo/myimage)
      DEST_IMAGE: ${{ inputs.dest-image }}

      # List of tags to publish
      TAGLIST: ${{ inputs.tag-list }}

      # Containerfile to build
      CONTAINERFILE: ${{ inputs.containerfile }}

    container:
      image: registry.access.redhat.com/ubi10/ubi
      options: --privileged --device /dev/nvme0n1
    permissions:
      contents: write
      packages: write

    steps:
      - name: Clone the repository
        uses: actions/checkout@v4

      - name: Get container tools in UBI builder
        run: dnf -y install podman buildah skopeo jq

      - name: Disable container image signature verification
        run: |
          jq "del(.transports)" /etc/containers/policy.json > /etc/containers/policy.json.new
          mv /etc/containers/policy.json.new /etc/containers/policy.json

      - name: Free up disk space
        run: |
          dnf config-manager --add-repo https://repo.almalinux.org/almalinux/10/BaseOS/aarch64/os/
          dnf install xfsprogs -y --nogpgcheck
          mkfs.xfs /dev/nvme0n1
          mkdir -p              /var/lib/containers
          mount    /dev/nvme0n1 /var/lib/containers

      - name: Access a subscription via activation key
        run: subscription-manager register --org=${{ secrets.RHT_ORGID }} --activationkey=${{ secrets.RHT_ACT_KEY }}

      # workaround for https://github.com/redhat-actions/podman-login/issues/42 since the docker config from the host doesn't come up to the container
      - name: Workaround open podman-login action issue
        env:
          auth: "{ \"auths\": {} }"
        run: |
          mkdir -p $HOME/.docker
          echo $auth > $HOME/.docker/config.json

      - name: Log in to the RHT terms based registry
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.SOURCE_REGISTRY_HOST }}
          username: ${{ secrets.SOURCE_REGISTRY_USER }}
          password: ${{ secrets.SOURCE_REGISTRY_PASSWORD }}
          auth_file_path: /run/containers/0/auth.json

      - name: Log in to the Container registry
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.DEST_REGISTRY_HOST }}
          username: ${{ secrets.DEST_REGISTRY_USER }}
          password: ${{ secrets.DEST_REGISTRY_PASSWORD }}
          auth_file_path: /run/containers/0/auth.json

      - name: Use buildah bud to create the image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.DEST_IMAGE }}
          tags: ${{ env.TAGLIST }}
          containerfiles: ${{ env.CONTAINERFILE }}
          build-args: ${{ inputs.build-args }} ${{ secrets.SECRET_BUILD_ARGS }}
          content: /run/containers/0/auth.json

      - name: Push to Container Repository
        id: push-to-ghcr
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ env.DEST_REGISTRY_HOST }}

      - name: Clean up the subscription
        if: always()
        run: subscription-manager unregister
