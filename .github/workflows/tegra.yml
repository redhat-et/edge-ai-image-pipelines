name: (Old) Build RHEL bootc images for Nvidia Tegra
on:
  workflow_dispatch:      
jobs:
  build-tegra-base:
    uses: ./.github/workflows/build-rhel-bootc-image.yml
    secrets: inherit
    with:
      containerfile: tegra/Containerfile.base
      dest-image: "redhat-et/rhel-bootc-tegra"
      tag-list: "base"

  build-tegra-ollama:
    uses: ./.github/workflows/build-rhel-bootc-image.yml
    secrets: inherit
    needs: build-tegra-base
    with:
      containerfile: tegra/Containerfile.podman
      dest-image: "redhat-et/rhel-bootc-tegra"
      tag-list: "ollama"
      build-args: |
        BASE_IMAGE=${{ needs.build-tegra-base.outputs.dest-reference }}
        APP_IMAGES=docker.io/dustynv/ollama:0.6.8-r36.4-cu126-22.04

  build-tegra-ollama-with-models:
    uses: ./.github/workflows/build-rhel-bootc-image.yml
    secrets: inherit
    needs: build-tegra-ollama
    with:
      containerfile: tegra/Containerfile.podman
      dest-image: "redhat-et/rhel-bootc-tegra"
      tag-list: "ollama-with-models"
      build-args: |
        BASE_IMAGE=${{ needs.build-tegra-ollama.outputs.dest-reference }}
        DAT_IMAGES=quay.io/ncao/modelsaddle-catalog:gemma3-4b quay.io/ncao/modelsaddle-catalog:gemma3-4b quay.io/ncao/modelsaddle-catalog:granite3.2-vision-2b

  build-tegra-vllm:
    uses: ./.github/workflows/build-rhel-bootc-image.yml
    secrets: inherit
    needs: build-tegra-base
    with:
      containerfile: tegra/Containerfile.podman
      dest-image: "redhat-et/rhel-bootc-tegra"
      tag-list: "vllm"
      build-args: |
        BASE_IMAGE=${{ needs.build-tegra-base.outputs.dest-reference }}
        APP_IMAGES=docker.io/dustynv/vllm:0.8.6-r36.4-cu128-24.04

  build-tegra-vllm-with-models:
    uses: ./.github/workflows/build-rhel-bootc-image.yml
    secrets: inherit
    needs: build-tegra-vllm
    with:
      containerfile: tegra/Containerfile.hf
      dest-image: "redhat-et/rhel-bootc-tegra"
      tag-list: "vllm-with-models"
      build-args: |
        BASE_IMAGE=${{ needs.build-tegra-vllm.outputs.dest-reference }}
        HF_REPOS=ibm-granite/granite-vision-3.2-2b moondream/moondream-2b-2025-04-14

  build-tegra-triton:
    uses: ./.github/workflows/build-triton.yml
    secrets: inherit
    needs: build-tegra-base

  build-tegra-llm:
    uses: ./.github/workflows/build-rhel-bootc-image.yml
    secrets: inherit
    needs: build-tegra-base
    with:
      containerfile: tegra/Containerfile.podman
      dest-image: "redhat-et/rhel-bootc-tegra"
      tag-list: "llm"
      build-args: |
        BASE_IMAGE=${{ needs.build-tegra-base.outputs.dest-reference }}
        APP_IMAGES=docker.io/dustynv/ollama:0.6.8-r36.4-cu126-22.04 docker.io/dustynv/vllm:0.8.6-r36.4-cu128-24.04 nvcr.io/nvidia/tritonserver:25.07-py3-igpu

  build-tegra-base-image:
    uses: ./.github/workflows/build-rhel-bootc-raw-image.yml
    secrets: inherit
    needs: build-tegra-base
    with:
      config-file: ./tegra/config.toml
      src-reference: ${{ needs.build-tegra-base.outputs.dest-reference }}

  build-tegra-llm-image:
    uses: ./.github/workflows/build-rhel-bootc-raw-image.yml
    secrets: inherit
    needs: build-tegra-llm
    with:
      config-file: ./tegra/config.toml
      src-reference: ${{ needs.build-tegra-llm.outputs.dest-reference }}

