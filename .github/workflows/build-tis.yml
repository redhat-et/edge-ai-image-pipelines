name: Build Inference Server on RHEL Bootc Nvidia Tegra
on:
  workflow_dispatch:
  workflow_call:
  push:
    branches:
      - main
jobs:
  build-tensorrt:
    uses: ./.github/workflows/build-rhel-bootc-image.yml
    secrets: inherit
    with:
      containerfile: tegra/Containerfile.podman
      dest-host: ${{ vars.DEST_REGISTRY_HOST }}
      dest-image: ${{ vars.DEST_REGISTRY_REPO }}
      tag-list: "tensorrt"
      build-args: |
        BASE_IMAGE=quay.io/redhat-et/rhel-bootc-tegra:base
        APP_IMAGES=nvcr.io/nvidia/tensorrt:25.05-py3-igpu

  build-tensorrt-raw:
    uses: ./.github/workflows/build-rhel-bootc-raw-image.yml
    secrets: inherit
    needs: build-tensorrt
    with:
      config-file: ./tegra/config.toml
      src-reference: ${{ needs.build-tensorrt.outputs.dest-reference }}

  build-engine:
    uses: ./.github/workflows/run-jumpstarter-workflow.yml
    secrets: inherit
    needs: build-tensorrt-raw
    with:
      jumpstarter-selector: ${{ vars.JUMPSTARTER_SELECTOR }}
      image-url: ${{ needs.build-tensorrt-raw.outputs.dest-reference }}
      workflow-cmd: bash inference/jmp-build-engine.sh ${{ vars.ARTIFACT_REGISTRY_HOST }}/${{ vars.ARTIFACT_REGISTRY_REPO }}:model-onnx ${{ vars.ARTIFACT_REGISTRY_HOST }}/${{ vars.ARTIFACT_REGISTRY_REPO }}:model-plan

  build-intermediate-tis:
    uses: ./.github/workflows/build-rhel-bootc-image.yml
    secrets: inherit
    with:
      containerfile: tegra/Containerfile.podman
      dest-host: ${{ vars.ARTIFACT_REGISTRY_HOST }}
      dest-image: ${{ vars.ARTIFACT_REGISTRY_REPO }}
      tag-list: "triton-inference-server-intermediate"
      build-args: |
        BASE_IMAGE=quay.io/redhat-et/rhel-bootc-tegra:base
        APP_IMAGES=nvcr.io/nvidia/tritonserver:25.05-py3-igpu

  build-tegra-tis:
    needs: [build-engine, build-intermediate-tis]
    uses: ./.github/workflows/build-rhel-bootc-image.yml
    secrets: inherit
    with:
      containerfile: inference/Containerfile.tis
      dest-host: ${{ vars.DEST_REGISTRY_HOST }}
      dest-image: ${{ vars.DEST_REGISTRY_REPO }}
      tag-list: "triton-inference-server"
      extra-args: --secret id=podman-auth,src=/run/containers/0/auth.json 
      build-args: |
        BASE_IMAGE=${{ vars.ARTIFACT_REGISTRY_HOST }}/${{ vars.ARTIFACT_REGISTRY_REPO }}:triton-inference-server-intermediate
        PLAN_ARTIFACT=${{ vars.ARTIFACT_REGISTRY_HOST }}/${{ vars.ARTIFACT_REGISTRY_REPO }}:model-plan

  build-tis-raw:
    uses: ./.github/workflows/build-rhel-bootc-raw-image.yml
    secrets: inherit
    needs: build-tegra-tis
    with:
      config-file: ./tegra/config.toml
      src-reference: ${{ needs.build-tegra-tis.outputs.dest-reference }}

  test-tis:
    uses: ./.github/workflows/run-jumpstarter-workflow.yml
    secrets: inherit
    needs: build-tis-raw
    with:
      jumpstarter-selector: ${{ vars.JUMPSTARTER_SELECTOR }}
      image-url: ${{ needs.build-tis-raw.outputs.dest-reference }}
      workflow-cmd: python3 inference/jmp-test-tis.py
