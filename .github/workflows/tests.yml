name: Test RHEL bootc image
on:
  workflow_dispatch:
  push:
    branches:
      - "main"
    paths:
      - "tests/**"
      - ".github/workflows/tests.yml"
jobs:
  test-tegra-base-image:
    runs-on: ubuntu-24.04-arm
    container:
      image: registry.access.redhat.com/ubi10/ubi
      options: --privileged --device /dev/nvme0n1
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - name: Install podman
        run: dnf -y install podman zstd
      # workaround for https://github.com/redhat-actions/podman-login/issues/42 since the docker config from the host doesn't come up to the container
      - name: Disable container image signature verification
        run: |
          jq "del(.transports)" /etc/containers/policy.json > /etc/containers/policy.json.new
          mv /etc/containers/policy.json.new /etc/containers/policy.json

      - name: Free up disk space
        run: |
          dnf config-manager --add-repo https://repo.almalinux.org/almalinux/10/BaseOS/aarch64/os/
          dnf install xfsprogs -y --nogpgcheck
          mkfs.xfs /dev/nvme0n1
          mkdir -p              /var/lib/containers
          mount    /dev/nvme0n1 /var/lib/containers
      - name: Workaround open podman-login action issue
        env:
          auth: "{ \"auths\": {} }"
        run: |
          mkdir -p $HOME/.docker
          echo $auth > $HOME/.docker/config.json
      - name: Log in to the Container registry
        uses: redhat-actions/podman-login@v1
        with:
          registry: quay.io
          username: ${{ secrets.DEST_REGISTRY_USER }}
          password: ${{ secrets.DEST_REGISTRY_PASSWORD }}
          auth_file_path: /run/containers/0/auth.json
      - name: Test RHEL bootc image
        run: |
          podman artifact pull    quay.io/redhat-et/rhel-bootc-tegra:base-raw
          podman artifact extract quay.io/redhat-et/rhel-bootc-tegra:base-raw image.raw.zst
          zstd -d image.raw.zst

          uv venv
          uv pip install --extra-index-url https://pkg.jumpstarter.dev/main/simple jumpstarter-all

          mkdir -p ~/.config/jumpstarter/clients
          cat <<EOF > ~/.config/jumpstarter/clients/default.yaml
          ${{ secrets.JUMPSTARTER_CLIENT_CONFIG }}
          EOF
          uv run jmp config client use default

          uv run jmp shell --selector nvidia=orin-nx -- pytest -s
