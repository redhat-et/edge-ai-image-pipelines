name: Build Inference Server on RHEL Bootc Nvidia Tegra
on:
  workflow_dispatch:
jobs:
  build-engine:
    uses: ./.github/workflows/run-jumpstarter-workflow.yml
    secrets: inherit
    with:
      jumpstarter-selector: ${{ vars.JUMPSTARTER_SELECTOR }}
      image-url: quay.io/redhat-et/rhel-bootc-tegra:tensorrt-raw
      workflow-cmd: |
        bash inference/build/jmp-build-engine.sh \
          ${{ vars.ARTIFACT_REGISTRY_HOST }}/${{ vars.ARTIFACT_REGISTRY_REPO }}:model-onnx \
          ${{ vars.ARTIFACT_REGISTRY_HOST }}/${{ vars.ARTIFACT_REGISTRY_REPO }}:model-plan

  build-intermediate-triton:
    uses: ./.github/workflows/build-rhel-bootc-image.yml
    secrets: inherit
    with:
      containerfile: tegra/Containerfile.podman
      dest-host: ${{ vars.ARTIFACT_REGISTRY_HOST }}
      dest-image: ${{ vars.ARTIFACT_REGISTRY_REPO }}
      tag-list: "triton-inference-server-intermediate"
      build-args: |
        BASE_IMAGE=quay.io/redhat-et/rhel-bootc-tegra:base
        APP_IMAGES=nvcr.io/nvidia/tritonserver:25.05-py3-igpu

  build-triton:
    needs: [build-engine, build-intermediate-triton]
    uses: ./.github/workflows/build-rhel-bootc-image.yml
    secrets: inherit
    with:
      containerfile: inference/build/Containerfile.triton
      dest-host: ${{ vars.DEST_REGISTRY_HOST }}
      dest-image: ${{ vars.DEST_REGISTRY_REPO }}
      tag-list: "triton-inference-server"
      extra-args: --secret id=podman-auth,src=/run/containers/0/auth.json 
      build-args: |
        BASE_IMAGE=${{ vars.ARTIFACT_REGISTRY_HOST }}/${{ vars.ARTIFACT_REGISTRY_REPO }}:triton-inference-server-intermediate
        PLAN_ARTIFACT=${{ vars.ARTIFACT_REGISTRY_HOST }}/${{ vars.ARTIFACT_REGISTRY_REPO }}:model-plan

  build-triton-raw:
    uses: ./.github/workflows/build-rhel-bootc-raw-image.yml
    secrets: inherit
    needs: build-triton
    with:
      config-file: ./tegra/config.toml
      src-reference: ${{ needs.build-triton.outputs.dest-reference }}

  test-triton:
    uses: ./.github/workflows/run-jumpstarter-workflow.yml
    secrets: inherit
    needs: build-triton-raw
    with:
      jumpstarter-selector: ${{ vars.JUMPSTARTER_SELECTOR }}
      image-url: ${{ needs.build-triton-raw.outputs.dest-reference }}
      workflow-cmd: python3 inference/tests/jmp-test-triton.py

  build-microshift:
    uses: ./.github/workflows/build-rhel-bootc-image.yml
    secrets: inherit
    needs: build-triton
    with:
      containerfile: tegra/Containerfile.microshift
      dest-host: ${{ vars.DEST_REGISTRY_HOST }}
      dest-image: ${{ vars.DEST_REGISTRY_REPO }}
      tag-list: "triton-microshift"
      extra-args: |
        --secret id=openshift-pull-secret,src=openshift-pull-secret.json
        --volume /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}:/repo
      build-args: |
        BASE_IMAGE=quay.io/redhat-et/rhel-bootc-tegra:triton-inference-server
        RESOURCE_DEFINITIONS=/repo/inference/microshift/triton.yml

  build-microshift-raw:
    uses: ./.github/workflows/build-rhel-bootc-raw-image.yml
    secrets: inherit
    needs: build-microshift
    with:
      config-file: ./tegra/config.toml
      src-reference: ${{ needs.build-microshift.outputs.dest-reference }}

  test-microshift:
    uses: ./.github/workflows/run-jumpstarter-workflow.yml
    secrets: inherit
    needs: [build-microshift-raw, test-triton]
    with:
      jumpstarter-selector: ${{ vars.JUMPSTARTER_SELECTOR }}
      workflow-cmd: python3 inference/tests/jmp-test-triton-microshift.py
      image-url: ${{ needs.build-microshift-raw.outputs.dest-reference }}

