name: Build Triton Server
on:
  workflow_dispatch:
  workflow_call:

jobs:
  build-engine:
    uses: ./.github/workflows/run-jumpstarter-workflow.yml
    secrets: inherit
    with:
      jumpstarter-selector: ${{ vars.JUMPSTARTER_SELECTOR }}
      image-url: ${{ vars.DEST_REGISTRY_HOST }}/${{ vars.DEST_REGISTRY_REPO }}:base-raw
      workflow-cmd: |
        bash triton/build/jmp-build-engine.sh \
          ${{ vars.ARTIFACT_REGISTRY_HOST }}/${{ vars.ARTIFACT_REGISTRY_REPO }}:onnx-repository \
          ${{ vars.ARTIFACT_REGISTRY_HOST }}/${{ vars.ARTIFACT_REGISTRY_REPO }}:plan-repository

  build-triton-base:
    uses: ./.github/workflows/build-rhel-bootc-image.yml
    secrets: inherit
    with:
      containerfile: tegra/Containerfile.podman
      dest-host: ${{ vars.ARTIFACT_REGISTRY_HOST }}
      dest-image: ${{ vars.ARTIFACT_REGISTRY_REPO }}
      tag-list: "triton-base"
      build-args: |
        APP_IMAGES=nvcr.io/nvidia/tritonserver:25.07-py3-igpu

  build-triton:
    needs: [build-engine, build-triton-base]
    uses: ./.github/workflows/build-rhel-bootc-image.yml
    secrets: inherit
    with:
      containerfile: triton/build/Containerfile.triton
      dest-host: ${{ vars.DEST_REGISTRY_HOST }}
      dest-image: ${{ vars.DEST_REGISTRY_REPO }}
      tag-list: "triton"
      extra-args: --secret id=podman-auth,src=/run/containers/0/auth.json 
      build-args: |
        BASE_IMAGE=${{ needs.build-triton-base.outputs.dest-reference }}
        PLAN_REPOSITORY=${{ vars.ARTIFACT_REGISTRY_HOST }}/${{ vars.ARTIFACT_REGISTRY_REPO }}:plan-repository

  build-triton-raw:
    uses: ./.github/workflows/build-rhel-bootc-raw-image.yml
    secrets: inherit
    needs: build-triton
    with:
      config-file: ./tegra/config.toml
      src-reference: ${{ needs.build-triton.outputs.dest-reference }}
